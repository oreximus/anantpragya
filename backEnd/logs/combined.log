{"level":"error","message":"Unable to start server: Access denied for user ''@'localhost'","name":"SequelizeConnectionError","original":{"code":"ER_ACCESS_DENIED_NO_PASSWORD_ERROR","errno":1698,"sqlMessage":"Access denied for user ''@'localhost'","sqlState":"28000"},"parent":{"code":"ER_ACCESS_DENIED_NO_PASSWORD_ERROR","errno":1698,"sqlMessage":"Access denied for user ''@'localhost'","sqlState":"28000"},"service":"blog-api","stack":"SequelizeConnectionError: Access denied for user ''@'localhost'\n    at ConnectionManager.connect (/home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/dialects/mysql/connection-manager.js:102:17)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ConnectionManager._connect (/home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:222:24)\n    at async /home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:174:32\n    at async ConnectionManager.getConnection (/home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:197:7)\n    at async /home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/sequelize.js:305:26\n    at async Sequelize.authenticate (/home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/sequelize.js:457:5)\n    at async startServer (/home/casan/Documents/projects/anantpragya/backEnd/server.js:65:5)","timestamp":"2025-06-30 17:06:53"}
{"level":"error","message":"Unable to start server: Access denied for user ''@'localhost'","name":"SequelizeConnectionError","original":{"code":"ER_ACCESS_DENIED_NO_PASSWORD_ERROR","errno":1698,"sqlMessage":"Access denied for user ''@'localhost'","sqlState":"28000"},"parent":{"code":"ER_ACCESS_DENIED_NO_PASSWORD_ERROR","errno":1698,"sqlMessage":"Access denied for user ''@'localhost'","sqlState":"28000"},"service":"blog-api","stack":"SequelizeConnectionError: Access denied for user ''@'localhost'\n    at ConnectionManager.connect (/home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/dialects/mysql/connection-manager.js:102:17)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ConnectionManager._connect (/home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:222:24)\n    at async /home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:174:32\n    at async ConnectionManager.getConnection (/home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:197:7)\n    at async /home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/sequelize.js:305:26\n    at async Sequelize.authenticate (/home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/sequelize.js:457:5)\n    at async startServer (/home/casan/Documents/projects/anantpragya/backEnd/server.js:65:5)","timestamp":"2025-06-30 17:07:37"}
{"level":"error","message":"Unable to start server: Access denied for user ''@'localhost'","name":"SequelizeConnectionError","original":{"code":"ER_ACCESS_DENIED_NO_PASSWORD_ERROR","errno":1698,"sqlMessage":"Access denied for user ''@'localhost'","sqlState":"28000"},"parent":{"code":"ER_ACCESS_DENIED_NO_PASSWORD_ERROR","errno":1698,"sqlMessage":"Access denied for user ''@'localhost'","sqlState":"28000"},"service":"blog-api","stack":"SequelizeConnectionError: Access denied for user ''@'localhost'\n    at ConnectionManager.connect (/home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/dialects/mysql/connection-manager.js:102:17)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ConnectionManager._connect (/home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:222:24)\n    at async /home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:174:32\n    at async ConnectionManager.getConnection (/home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/dialects/abstract/connection-manager.js:197:7)\n    at async /home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/sequelize.js:305:26\n    at async Sequelize.authenticate (/home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/sequelize.js:457:5)\n    at async startServer (/home/casan/Documents/projects/anantpragya/backEnd/server.js:69:5)","timestamp":"2025-06-30 17:08:26"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","service":"blog-api","timestamp":"2025-06-30 17:10:17"}
{"level":"info","message":"Database connection established successfully.","service":"blog-api","timestamp":"2025-06-30 17:10:17"}
{"level":"debug","message":"Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'users' AND TABLE_SCHEMA = 'anant_pragya_blog'","service":"blog-api","timestamp":"2025-06-30 17:10:17"}
{"level":"debug","message":"Executing (default): SHOW FULL COLUMNS FROM `users`;","service":"blog-api","timestamp":"2025-06-30 17:10:17"}
{"level":"debug","message":"Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'users' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='anant_pragya_blog' AND REFERENCED_TABLE_NAME IS NOT NULL;","service":"blog-api","timestamp":"2025-06-30 17:10:17"}
{"level":"debug","message":"Executing (default): ALTER TABLE `users` CHANGE `first_name` `first_name` VARCHAR(255) NOT NULL;","service":"blog-api","timestamp":"2025-06-30 17:10:17"}
{"level":"debug","message":"Executing (default): ALTER TABLE `users` CHANGE `last_name` `last_name` VARCHAR(255) NOT NULL;","service":"blog-api","timestamp":"2025-06-30 17:10:17"}
{"level":"debug","message":"Executing (default): ALTER TABLE `users` CHANGE `email` `email` VARCHAR(255) NOT NULL UNIQUE;","service":"blog-api","timestamp":"2025-06-30 17:10:17"}
{"level":"debug","message":"Executing (default): ALTER TABLE `users` CHANGE `password` `password` VARCHAR(255) NOT NULL;","service":"blog-api","timestamp":"2025-06-30 17:10:17"}
{"level":"debug","message":"Executing (default): ALTER TABLE `users` CHANGE `created_at` `created_at` DATETIME;","service":"blog-api","timestamp":"2025-06-30 17:10:17"}
{"level":"debug","message":"Executing (default): ALTER TABLE `users` CHANGE `created_by` `created_by` CHAR(36) BINARY;","service":"blog-api","timestamp":"2025-06-30 17:10:17"}
{"level":"debug","message":"Executing (default): ALTER TABLE `users` CHANGE `updated_at` `updated_at` DATETIME;","service":"blog-api","timestamp":"2025-06-30 17:10:17"}
{"level":"debug","message":"Executing (default): ALTER TABLE `users` CHANGE `updated_by` `updated_by` CHAR(36) BINARY;","service":"blog-api","timestamp":"2025-06-30 17:10:17"}
{"level":"debug","message":"Executing (default): ALTER TABLE `users` CHANGE `is_active` `is_active` TINYINT(1) DEFAULT true;","service":"blog-api","timestamp":"2025-06-30 17:10:17"}
{"level":"debug","message":"Executing (default): ALTER TABLE `users` CHANGE `is_deleted` `is_deleted` TINYINT(1) DEFAULT false;","service":"blog-api","timestamp":"2025-06-30 17:10:17"}
{"level":"debug","message":"Executing (default): ALTER TABLE `users` CHANGE `role` `role` TINYINT DEFAULT 1 COMMENT '0 for Admin, 1 for Normal User';","service":"blog-api","timestamp":"2025-06-30 17:10:17"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`","service":"blog-api","timestamp":"2025-06-30 17:10:17"}
{"level":"debug","message":"Executing (default): ALTER TABLE `users` ADD INDEX `users_email` (`email`)","service":"blog-api","timestamp":"2025-06-30 17:10:17"}
{"level":"debug","message":"Executing (default): ALTER TABLE `users` ADD INDEX `users_role` (`role`)","service":"blog-api","timestamp":"2025-06-30 17:10:18"}
{"level":"debug","message":"Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'category' AND TABLE_SCHEMA = 'anant_pragya_blog'","service":"blog-api","timestamp":"2025-06-30 17:10:18"}
{"level":"debug","message":"Executing (default): SHOW FULL COLUMNS FROM `category`;","service":"blog-api","timestamp":"2025-06-30 17:10:18"}
{"level":"debug","message":"Executing (default): SELECT CONSTRAINT_NAME as constraint_name,CONSTRAINT_NAME as constraintName,CONSTRAINT_SCHEMA as constraintSchema,CONSTRAINT_SCHEMA as constraintCatalog,TABLE_NAME as tableName,TABLE_SCHEMA as tableSchema,TABLE_SCHEMA as tableCatalog,COLUMN_NAME as columnName,REFERENCED_TABLE_SCHEMA as referencedTableSchema,REFERENCED_TABLE_SCHEMA as referencedTableCatalog,REFERENCED_TABLE_NAME as referencedTableName,REFERENCED_COLUMN_NAME as referencedColumnName FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE where TABLE_NAME = 'category' AND CONSTRAINT_NAME!='PRIMARY' AND CONSTRAINT_SCHEMA='anant_pragya_blog' AND REFERENCED_TABLE_NAME IS NOT NULL;","service":"blog-api","timestamp":"2025-06-30 17:10:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE `category` CHANGE `name` `name` VARCHAR(255) NOT NULL;","service":"blog-api","timestamp":"2025-06-30 17:10:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE `category` CHANGE `created_at` `created_at` DATETIME;","service":"blog-api","timestamp":"2025-06-30 17:10:18"}
{"level":"debug","message":"Executing (default): ALTER TABLE `category` CHANGE `created_by` `created_by` CHAR(36) BINARY;","service":"blog-api","timestamp":"2025-06-30 17:10:18"}
{"level":"error","message":"Unable to start server: Cannot change column 'created_by': used in a foreign key constraint 'category_ibfk_1'","name":"SequelizeDatabaseError","original":{"code":"ER_FK_COLUMN_CANNOT_CHANGE","errno":1832,"sql":"ALTER TABLE `category` CHANGE `created_by` `created_by` CHAR(36) BINARY;","sqlMessage":"Cannot change column 'created_by': used in a foreign key constraint 'category_ibfk_1'","sqlState":"HY000"},"parameters":{},"parent":{"code":"ER_FK_COLUMN_CANNOT_CHANGE","errno":1832,"sql":"ALTER TABLE `category` CHANGE `created_by` `created_by` CHAR(36) BINARY;","sqlMessage":"Cannot change column 'created_by': used in a foreign key constraint 'category_ibfk_1'","sqlState":"HY000"},"service":"blog-api","sql":"ALTER TABLE `category` CHANGE `created_by` `created_by` CHAR(36) BINARY;","stack":"Error\n    at Query.run (/home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/dialects/mysql/query.js:52:25)\n    at /home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/sequelize.js:315:28\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async category.sync (/home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/model.js:984:11)\n    at async Sequelize.sync (/home/casan/Documents/projects/anantpragya/backEnd/node_modules/sequelize/lib/sequelize.js:377:9)\n    at async startServer (/home/casan/Documents/projects/anantpragya/backEnd/server.js:75:7)","timestamp":"2025-06-30 17:10:18"}
{"level":"debug","message":"Executing (default): SELECT 1+1 AS result","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"info","message":"Database connection established successfully.","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'users' AND TABLE_SCHEMA = 'anant_pragya_blog'","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` CHAR(36) BINARY , `first_name` VARCHAR(255) NOT NULL, `last_name` VARCHAR(255) NOT NULL, `email` VARCHAR(255) NOT NULL UNIQUE, `password` VARCHAR(255) NOT NULL, `role` TINYINT DEFAULT 1 COMMENT '0 for Admin, 1 for Normal User', `created_at` DATETIME, `created_by` CHAR(36) BINARY, `updated_at` DATETIME, `updated_by` CHAR(36) BINARY, `is_active` TINYINT(1) DEFAULT true, `is_deleted` TINYINT(1) DEFAULT false, PRIMARY KEY (`id`)) ENGINE=InnoDB;","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `users`","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): ALTER TABLE `users` ADD INDEX `users_email` (`email`)","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): ALTER TABLE `users` ADD INDEX `users_role` (`role`)","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'category' AND TABLE_SCHEMA = 'anant_pragya_blog'","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `category` (`id` CHAR(36) BINARY , `name` VARCHAR(255) NOT NULL, `created_at` DATETIME, `created_by` CHAR(36) BINARY, `updated_at` DATETIME, `updated_by` CHAR(36) BINARY, `is_active` TINYINT(1) DEFAULT true, `is_deleted` TINYINT(1) DEFAULT false, PRIMARY KEY (`id`)) ENGINE=InnoDB;","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `category`","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post' AND TABLE_SCHEMA = 'anant_pragya_blog'","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `post` (`id` CHAR(36) BINARY , `user_id` CHAR(36) BINARY NOT NULL, `category_id` CHAR(36) BINARY, `title` VARCHAR(255) NOT NULL, `content` TEXT, `tags` VARCHAR(500), `created_at` DATETIME, `created_by` CHAR(36) BINARY, `updated_at` DATETIME, `updated_by` CHAR(36) BINARY, `is_active` TINYINT(1) DEFAULT true, `is_deleted` TINYINT(1) DEFAULT false, PRIMARY KEY (`id`), FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`category_id`) REFERENCES `category` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `post`","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): ALTER TABLE `post` ADD INDEX `post_user_id` (`user_id`)","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): ALTER TABLE `post` ADD INDEX `post_category_id` (`category_id`)","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): ALTER TABLE `post` ADD INDEX `post_created_at` (`created_at`)","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post_activity' AND TABLE_SCHEMA = 'anant_pragya_blog'","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `post_activity` (`id` CHAR(36) BINARY , `post_id` CHAR(36) BINARY NOT NULL, `user_id` CHAR(36) BINARY NOT NULL, `like_count` INTEGER DEFAULT 0, `comment` TEXT, `share_count` INTEGER DEFAULT 0, `created_at` DATETIME, `created_by` CHAR(36) BINARY, `updated_at` DATETIME, `updated_by` CHAR(36) BINARY, `is_active` TINYINT(1) DEFAULT true, `is_deleted` TINYINT(1) DEFAULT false, PRIMARY KEY (`id`), FOREIGN KEY (`post_id`) REFERENCES `post` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`user_id`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `post_activity`","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): ALTER TABLE `post_activity` ADD INDEX `post_activity_post_id` (`post_id`)","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): ALTER TABLE `post_activity` ADD INDEX `post_activity_user_id` (`user_id`)","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'BASE TABLE' AND TABLE_NAME = 'post_data' AND TABLE_SCHEMA = 'anant_pragya_blog'","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): CREATE TABLE IF NOT EXISTS `post_data` (`id` CHAR(36) BINARY , `post_id` CHAR(36) BINARY NOT NULL, `original_name` VARCHAR(255), `file_path` VARCHAR(500), `file_type` VARCHAR(100), `created_at` DATETIME, `created_by` CHAR(36) BINARY, `updated_at` DATETIME, `updated_by` CHAR(36) BINARY, `is_active` TINYINT(1) DEFAULT true, `is_deleted` TINYINT(1) DEFAULT false, PRIMARY KEY (`id`), FOREIGN KEY (`post_id`) REFERENCES `post` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): SHOW INDEX FROM `post_data`","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"debug","message":"Executing (default): ALTER TABLE `post_data` ADD INDEX `post_data_post_id` (`post_id`)","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"info","message":"Database synchronized.","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
{"level":"info","message":"Server running on port 5001 in development mode","service":"blog-api","timestamp":"2025-07-01 05:52:16"}
