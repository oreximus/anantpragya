{
	"info": {
		"_postman_id": "42e0d3c1-f7c0-4fec-bc2a-119b2dbdefdc",
		"name": "anantpragya.com",
		"description": "Complete API collection for the blogging application with authentication, user management, and post operations",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "33520907",
		"_collection_link": "https://oreximus.postman.co/workspace/BettleBytes~cbef616c-1531-488d-a427-1bf779db3026/collection/33520907-42e0d3c1-f7c0-4fec-bc2a-119b2dbdefdc?action=share&source=collection_link&creator=33520907"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "User Registration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.status && response.data) {",
									"        pm.collectionVariables.set('access_token', response.data.access_token);",
									"        pm.collectionVariables.set('user_id', response.data.id);",
									"        console.log('Registration successful, token saved');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone_no\": 1234567890,\n    \"password\": \"Password123!\",\n    \"confirm_password\": \"Password123!\"\n}"
						},
						"url": "{{base_url}}/auth/register",
						"description": "Register a new user account"
					},
					"response": [
						{
							"name": "User Registration",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"John\",\n    \"last_name\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone_no\": 1234567890,\n    \"password\": \"Password123!\",\n    \"confirm_password\": \"Password123!\"\n}"
								},
								"url": "{{base_url}}/auth/register"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Embedder-Policy",
									"value": "require-corp"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=0"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "562"
								},
								{
									"key": "ETag",
									"value": "W/\"232-Oa5bxoveCCxT4nWJplPwXsf+yCQ\""
								},
								{
									"key": "Date",
									"value": "Tue, 08 Jul 2025 22:25:03 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"message\": \"User registered successfully.\",\n    \"fromCache\": false,\n    \"data\": {\n        \"id\": \"4e53d891-a782-40bb-b933-ef0cd3c7a73c\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Doe\",\n        \"email\": \"john.doe@example.com\",\n        \"phone_no\": 1234567890,\n        \"is_admin\": 0,\n        \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0aW1lIjoiV2VkIEp1bCAwOSAyMDI1IDA1OjI1OjAzIEdNVCswNzAwIChJbmRvY2hpbmEgVGltZSkiLCJ1c2VySWQiOiI0ZTUzZDg5MS1hNzgyLTQwYmItYjkzMy1lZjBjZDNjN2E3M2MiLCJpc0FkbWluIjowLCJpYXQiOjE3NTIwMTM1MDMsImV4cCI6MTc1MjYxODMwM30.XxGOHTkalxORJkJEb37fJtkCVNVppickJuXGce-Htpc\",\n        \"expire_token\": \"7 days\"\n    }\n}"
						}
					]
				},
				{
					"name": "User Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.status && response.data) {",
									"        pm.collectionVariables.set('access_token', response.data.access_token);",
									"        pm.collectionVariables.set('user_id', response.data.id);",
									"        console.log('Login successful, token saved');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"Password123!\"\n}"
						},
						"url": "{{base_url}}/auth/login",
						"description": "Login with email and password"
					},
					"response": [
						{
							"name": "User Login",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"Password123!\"\n}"
								},
								"url": "{{base_url}}/auth/login"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Embedder-Policy",
									"value": "require-corp"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=0"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "550"
								},
								{
									"key": "ETag",
									"value": "W/\"226-WaTPPcxqUVEgsZdjJUmmJ/jwS2w\""
								},
								{
									"key": "Date",
									"value": "Tue, 08 Jul 2025 22:37:13 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"message\": \"Login successful.\",\n    \"fromCache\": false,\n    \"data\": {\n        \"id\": \"4e53d891-a782-40bb-b933-ef0cd3c7a73c\",\n        \"first_name\": \"John\",\n        \"last_name\": \"Doe\",\n        \"email\": \"john.doe@example.com\",\n        \"phone_no\": 1234567890,\n        \"is_admin\": 0,\n        \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0aW1lIjoiV2VkIEp1bCAwOSAyMDI1IDA1OjM3OjEzIEdNVCswNzAwIChJbmRvY2hpbmEgVGltZSkiLCJ1c2VySWQiOiI0ZTUzZDg5MS1hNzgyLTQwYmItYjkzMy1lZjBjZDNjN2E3M2MiLCJpc0FkbWluIjowLCJpYXQiOjE3NTIwMTQyMzMsImV4cCI6MTc1MjYxOTAzM30.NMShCzsZypwZUOkHHcXuqk4xEfYSKP886E1yS-W-KzY\",\n        \"expire_token\": \"7 days\"\n    }\n}"
						},
						{
							"name": "User Login Error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"password\": \"asdfasd!\"\n}"
								},
								"url": "{{base_url}}/auth/login"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Embedder-Policy",
									"value": "require-corp"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=0"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "115"
								},
								{
									"key": "ETag",
									"value": "W/\"73-F4Zg1E1ao/SlaLxDCjXtrenFmWg\""
								},
								{
									"key": "Date",
									"value": "Tue, 08 Jul 2025 22:36:56 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": false,\n    \"message\": [\n        {\n            \"label\": \"error\",\n            \"message\": \"Invalid credentials. Please try again!\"\n        }\n    ],\n    \"fromCache\": false\n}"
						}
					]
				},
				{
					"name": "Get Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": "{{base_url}}/auth/profile",
						"description": "Get current user profile"
					},
					"response": [
						{
							"name": "Get Profile (Authenticated)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/auth/profile"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Embedder-Policy",
									"value": "require-corp"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=0"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "622"
								},
								{
									"key": "ETag",
									"value": "W/\"26e-KZv6/zrcxF2VHxG5Y5I1HodQOGU\""
								},
								{
									"key": "Date",
									"value": "Tue, 08 Jul 2025 22:39:59 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"message\": \"Profile fetched successfully.\",\n    \"fromCache\": false,\n    \"data\": {\n        \"first_name\": \"John\",\n        \"last_name\": \"Doe\",\n        \"created_at\": \"2025-07-09 05:25:03\",\n        \"updated_at\": \"2025-07-09 05:37:13\",\n        \"id\": \"4e53d891-a782-40bb-b933-ef0cd3c7a73c\",\n        \"email\": \"john.doe@example.com\",\n        \"phone_no\": 1234567890,\n        \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0aW1lIjoiV2VkIEp1bCAwOSAyMDI1IDA1OjM3OjEzIEdNVCswNzAwIChJbmRvY2hpbmEgVGltZSkiLCJ1c2VySWQiOiI0ZTUzZDg5MS1hNzgyLTQwYmItYjkzMy1lZjBjZDNjN2E3M2MiLCJpc0FkbWluIjowLCJpYXQiOjE3NTIwMTQyMzMsImV4cCI6MTc1MjYxOTAzM30.NMShCzsZypwZUOkHHcXuqk4xEfYSKP886E1yS-W-KzY\",\n        \"is_admin\": 0,\n        \"is_active\": 1\n    }\n}"
						},
						{
							"name": "Get Profile (Unauthenticated)",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{access_token}}"
									}
								],
								"url": "{{base_url}}/auth/profile"
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Embedder-Policy",
									"value": "require-corp"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=0"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "85"
								},
								{
									"key": "ETag",
									"value": "W/\"55-3Y96D7AzD/4pZwAoV+F3JnLN100\""
								},
								{
									"key": "Date",
									"value": "Tue, 08 Jul 2025 22:39:15 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": false,\n    \"message\": \"Unauthorized! Access Token was expired!\",\n    \"is_expire\": true\n}"
						}
					]
				},
				{
					"name": "Update Profile",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"first_name\": \"John Updated\",\n    \"last_name\": \"Doe Updated\",\n    \"email\": \"john.updated@example.com\",\n    \"phone_no\": 9876543210\n}"
						},
						"url": "{{base_url}}/auth/update-profile",
						"description": "Update user profile information"
					},
					"response": [
						{
							"name": "Update Profile (Authenticated)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"John Updated\",\n    \"last_name\": \"Doe Updated\",\n    \"email\": \"john.updated@example.com\",\n    \"phone_no\": 9876543210\n}"
								},
								"url": "{{base_url}}/auth/update-profile"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Embedder-Policy",
									"value": "require-corp"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=0"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "694"
								},
								{
									"key": "ETag",
									"value": "W/\"2b6-3moNEBIKaKozzjazfGy689Id750\""
								},
								{
									"key": "Date",
									"value": "Tue, 08 Jul 2025 22:42:21 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"message\": \"Profile updated successfully.\",\n    \"fromCache\": false,\n    \"data\": {\n        \"first_name\": \"John updated\",\n        \"last_name\": \"Doe updated\",\n        \"created_at\": \"2025-07-09 05:25:03\",\n        \"updated_at\": \"2025-07-09 05:42:21\",\n        \"id\": \"4e53d891-a782-40bb-b933-ef0cd3c7a73c\",\n        \"email\": \"john.updated@example.com\",\n        \"phone_no\": 9876543210,\n        \"access_token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0aW1lIjoiV2VkIEp1bCAwOSAyMDI1IDA1OjM3OjEzIEdNVCswNzAwIChJbmRvY2hpbmEgVGltZSkiLCJ1c2VySWQiOiI0ZTUzZDg5MS1hNzgyLTQwYmItYjkzMy1lZjBjZDNjN2E3M2MiLCJpc0FkbWluIjowLCJpYXQiOjE3NTIwMTQyMzMsImV4cCI6MTc1MjYxOTAzM30.NMShCzsZypwZUOkHHcXuqk4xEfYSKP886E1yS-W-KzY\",\n        \"is_admin\": 0,\n        \"is_active\": 1,\n        \"updated_by\": \"4e53d891-a782-40bb-b933-ef0cd3c7a73c\"\n    }\n}"
						},
						{
							"name": "Update Profile (Unauthenticated)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"first_name\": \"John Updated\",\n    \"last_name\": \"Doe Updated\",\n    \"email\": \"john.updated@example.com\",\n    \"phone_no\": 9876543210\n}"
								},
								"url": "{{base_url}}/auth/update-profile"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Embedder-Policy",
									"value": "require-corp"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=0"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "69"
								},
								{
									"key": "ETag",
									"value": "W/\"45-7fUEsVxbhHMWf9/7gerw5JkoH08\""
								},
								{
									"key": "Date",
									"value": "Tue, 08 Jul 2025 22:42:01 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": false,\n    \"message\": \"Please provide a valid \\\"Bearer Token\\\"!\"\n}"
						}
					]
				},
				{
					"name": "Change Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"current_password\": \"Password123!\",\n    \"new_password\": \"NewPassword123!\",\n    \"confirm_password\": \"NewPassword123!\"\n}"
						},
						"url": "{{base_url}}/auth/change-password",
						"description": "Change user password"
					},
					"response": [
						{
							"name": "Change Password (Authenticated)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"current_password\": \"Password123!\",\n    \"new_password\": \"NewPassword123!\",\n    \"confirm_password\": \"NewPassword123!\"\n}"
								},
								"url": "{{base_url}}/auth/change-password"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Embedder-Policy",
									"value": "require-corp"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=0"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "132"
								},
								{
									"key": "ETag",
									"value": "W/\"84-jbtpY1S3/lqiQD8HBuy3oo9emks\""
								},
								{
									"key": "Date",
									"value": "Tue, 08 Jul 2025 22:43:17 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"message\": \"User password changed successfully.\",\n    \"fromCache\": false,\n    \"data\": {\n        \"message\": \"Password changed successfully\"\n    }\n}"
						},
						{
							"name": "Change Password (Unauthenticated)",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"current_password\": \"Password123!\",\n    \"new_password\": \"NewPassword123!\",\n    \"confirm_password\": \"NewPassword123!\"\n}"
								},
								"url": "{{base_url}}/auth/change-password"
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Embedder-Policy",
									"value": "require-corp"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=0"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "69"
								},
								{
									"key": "ETag",
									"value": "W/\"45-7fUEsVxbhHMWf9/7gerw5JkoH08\""
								},
								{
									"key": "Date",
									"value": "Tue, 08 Jul 2025 22:43:00 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": false,\n    \"message\": \"Please provide a valid \\\"Bearer Token\\\"!\"\n}"
						}
					]
				},
				{
					"name": "Forgot Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john.doe@example.com\"\n}"
						},
						"url": "{{base_url}}/auth/forgot-password",
						"description": "Request password reset"
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john.doe@example.com\",\n    \"reset_token\": \"your-reset-token-here\",\n    \"new_password\": \"NewPassword123!\",\n    \"confirm_password\": \"NewPassword123!\"\n}"
						},
						"url": "{{base_url}}/auth/reset-password",
						"description": "Reset password with token"
					},
					"response": []
				}
			],
			"description": "Authentication related endpoints"
		},
		{
			"name": "User Management",
			"item": [
				{
					"name": "Get User List",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": {
							"raw": "{{base_url}}/user/list?page=1&limit=10&search=&is_active=1",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"user",
								"list"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number (optional)"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Items per page (optional, max 100)"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search term (optional)"
								},
								{
									"key": "is_active",
									"value": "1",
									"description": "Filter by status: 0=inactive, 1=active (optional)"
								}
							]
						},
						"description": "Get paginated list of users with optional filters"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"url": "{{base_url}}/user/{{user_id}}",
						"description": "Get specific user details by ID"
					},
					"response": []
				},
				{
					"name": "Update User Status (Admin Only)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_id\": \"{{user_id}}\",\n    \"is_active\": 0\n}"
						},
						"url": "{{base_url}}/user/update-status",
						"description": "Update user status (only admin can perform this action)"
					},
					"response": []
				}
			],
			"description": "User management endpoints"
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "Get Post Categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.status && response.data && response.data.length > 0) {",
									"        pm.collectionVariables.set('category_id', response.data[0].id);",
									"        console.log('Category ID saved:', response.data[0].id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/post/categories",
						"description": "Get all post categories"
					},
					"response": [
						{
							"name": "Get Post Categories",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/post/categories"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Embedder-Policy",
									"value": "require-corp"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=0"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "239"
								},
								{
									"key": "ETag",
									"value": "W/\"ef-uAG6zZMo5SWtb3N0aBXi4Vm3haE\""
								},
								{
									"key": "Date",
									"value": "Tue, 08 Jul 2025 22:46:54 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": true,\n    \"message\": \"Categories fetched successfully.\",\n    \"fromCache\": false,\n    \"data\": [\n        {\n            \"id\": \"6be0ad19-5c4d-11f0-9142-de3fa0651a50\",\n            \"name\": \"life\",\n            \"is_active\": 1\n        },\n        {\n            \"id\": \"6be0a97d-5c4d-11f0-9142-de3fa0651a50\",\n            \"name\": \"religion\",\n            \"is_active\": 1\n        }\n    ]\n}"
						},
						{
							"name": "Get Post Categories (In case of no categories)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": "{{base_url}}/post/categories"
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Embedder-Policy",
									"value": "require-corp"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=0"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "97"
								},
								{
									"key": "ETag",
									"value": "W/\"61-Pnhve9yKLGtqEZPX2bN7pO0f+Y4\""
								},
								{
									"key": "Date",
									"value": "Tue, 08 Jul 2025 22:47:33 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": false,\n    \"message\": [\n        {\n            \"label\": \"error\",\n            \"message\": \"No categories found!\"\n        }\n    ],\n    \"fromCache\": false\n}"
						}
					]
				},
				{
					"name": "Get Post List",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.status && response.data && response.data.rows && response.data.rows.length > 0) {",
									"        pm.collectionVariables.set('post_id', response.data.rows[0].id);",
									"        console.log('Post ID saved:', response.data.rows[0].id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/post/list?page=1&limit=10&search=&category_id={{category_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"post",
								"list"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number (optional)"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Items per page (optional, max 100)"
								},
								{
									"key": "search",
									"value": "",
									"description": "Search term (optional)"
								},
								{
									"key": "category_id",
									"value": "{{category_id}}",
									"description": "Filter by category (optional)"
								}
							]
						},
						"description": "Get paginated list of posts with optional filters"
					},
					"response": [
						{
							"name": "Get Post List (In case of No post for the Category)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/post/list?page=1&limit=10&search=&category_id={{category_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"post",
										"list"
									],
									"query": [
										{
											"key": "page",
											"value": "1",
											"description": "Page number (optional)"
										},
										{
											"key": "limit",
											"value": "10",
											"description": "Items per page (optional, max 100)"
										},
										{
											"key": "search",
											"value": "",
											"description": "Search term (optional)"
										},
										{
											"key": "category_id",
											"value": "{{category_id}}",
											"description": "Filter by category (optional)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Security-Policy",
									"value": "default-src 'self';base-uri 'self';block-all-mixed-content;font-src 'self' https: data:;form-action 'self';frame-ancestors 'self';img-src 'self' data:;object-src 'none';script-src 'self';script-src-attr 'none';style-src 'self' https: 'unsafe-inline';upgrade-insecure-requests"
								},
								{
									"key": "Cross-Origin-Embedder-Policy",
									"value": "require-corp"
								},
								{
									"key": "Cross-Origin-Opener-Policy",
									"value": "same-origin"
								},
								{
									"key": "X-DNS-Prefetch-Control",
									"value": "off"
								},
								{
									"key": "Expect-CT",
									"value": "max-age=0"
								},
								{
									"key": "X-Frame-Options",
									"value": "SAMEORIGIN"
								},
								{
									"key": "Strict-Transport-Security",
									"value": "max-age=15552000; includeSubDomains"
								},
								{
									"key": "X-Download-Options",
									"value": "noopen"
								},
								{
									"key": "X-Content-Type-Options",
									"value": "nosniff"
								},
								{
									"key": "Origin-Agent-Cluster",
									"value": "?1"
								},
								{
									"key": "X-Permitted-Cross-Domain-Policies",
									"value": "none"
								},
								{
									"key": "Referrer-Policy",
									"value": "no-referrer"
								},
								{
									"key": "X-XSS-Protection",
									"value": "0"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "92"
								},
								{
									"key": "ETag",
									"value": "W/\"5c-8uGgS1HZEXLVOTRJu2Nl1MxPhOQ\""
								},
								{
									"key": "Date",
									"value": "Tue, 08 Jul 2025 22:48:04 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": false,\n    \"message\": [\n        {\n            \"label\": \"error\",\n            \"message\": \"No posts found!\"\n        }\n    ],\n    \"fromCache\": false\n}"
						}
					]
				},
				{
					"name": "Get Post by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{base_url}}/post/{{post_id}}",
						"description": "Get specific post details by ID"
					},
					"response": []
				},
				{
					"name": "Create Post",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.status && response.data && response.data.id) {",
									"        pm.collectionVariables.set('post_id', response.data.id);",
									"        console.log('New post ID saved:', response.data.id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"category_id\": \"{{category_id}}\",\n    \"title\": \"My First Blog Post\",\n    \"post_data\": \"This is the content of my first blog post. It contains some interesting information about various topics.\"\n}"
						},
						"url": "{{base_url}}/post/create",
						"description": "Create a new blog post"
					},
					"response": []
				},
				{
					"name": "Update Post",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{post_id}}\",\n    \"category_id\": \"{{category_id}}\",\n    \"title\": \"My Updated Blog Post\",\n    \"post_data\": \"This is the updated content of my blog post with new information.\"\n}"
						},
						"url": "{{base_url}}/post/update",
						"description": "Update an existing post (only author or admin)"
					},
					"response": []
				},
				{
					"name": "Delete Post",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{post_id}}\"\n}"
						},
						"url": "{{base_url}}/post/delete",
						"description": "Delete a post (only author or admin)"
					},
					"response": []
				},
				{
					"name": "Like/Unlike Post",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"post_id\": \"{{post_id}}\"\n}"
						},
						"url": "{{base_url}}/post/like",
						"description": "Like or unlike a post"
					},
					"response": []
				},
				{
					"name": "Add Comment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{access_token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"post_id\": \"{{post_id}}\",\n    \"comment\": \"This is a great post! Thanks for sharing.\"\n}"
						},
						"url": "{{base_url}}/post/comment",
						"description": "Add a comment to a post"
					},
					"response": []
				},
				{
					"name": "Get Post Comments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/post/{{post_id}}/comments?page=1&limit=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"post",
								"{{post_id}}",
								"comments"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number (optional)"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Items per page (optional, max 100)"
								}
							]
						},
						"description": "Get comments for a specific post"
					},
					"response": []
				}
			],
			"description": "Blog post management endpoints"
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": {
			"token": "{{access_token}}"
		}
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global pre-request script",
					"console.log('Making request to:', pm.request.url.toString());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Global test script",
					"pm.test('Response time is less than 5000ms', function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});",
					"",
					"pm.test('Response has correct content type', function () {",
					"    pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
					"});",
					"",
					"if (pm.response.code !== 200) {",
					"    console.log('Response body:', pm.response.text());",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:3002/api",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "post_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "category_id",
			"value": "",
			"type": "string"
		}
	]
}